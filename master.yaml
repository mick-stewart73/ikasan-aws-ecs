Description: >

  This Cloud Formation template is the master template providing an AWS environment supporting base Ikasan Cloud services.

  It deploys the following:
    - A Virtual Private Clout (VPC), with a pair of public and private sub nets spread across two Availability Zones.
    - An Internet Gateway, with a default route onto the public sub nets.
    - A pair of NAT Gateways (one in each AZ), and default routes for them into the private sub nets.
    - A highly available Elastic Container Service (ECS) cluster using an AutoScaling Group, with ECS hosts distributed across multiple Availability Zones.
    - 3 Elastic File Systems (EFS) volumes, ikasan-index-fs, ikasan-config-fs and ikasan-data-fs. These volumes can be mounted onto container file systems
      in order to provide persistent storage.
    - A container Discovery Service with containers addressed by <service-name>.ikasan.cloud.org.
    - An Application Load Balancer providing sticky session load balancing across multiple instances of the Ikasan Dashboard.

  Finally, it deploys the following base Ikasan services from containers published in Amazon EC2 Container Registry (Amazon ECR).
    - A configurable number of instances of the configuration service. This is backed by a git repository.
    - A single solr instance backed by persistent disk.
    - A single h2 service for the Ikasan Dashboard with the database file backed by persistent disk.
    - A configurable number of Ikasan Dashboard instances access via a sticky session load balancer.

  All nested templates accept input parameters allowing for the size realised VPC to be scaled as required. For example a development instance of the VPC
  might only contain 2 ECS hosts, whereas a production instance might contain 8 ECS hosts. The physical size of these hosts can also be configured via these
  parameters. Each nested template provides details of the parameters that it accepts.

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/linux-bastion.yaml
      Parameters:
        BastionHostName: ikasan-bastion
        BastionBanner: IKASAN CLOUD
        EnableBanner: true
        EnableTCPForwarding: false
        EnableX11Forwarding: false
        KeyPairName: eu-west-1
        NumBastionHosts: 1
        PublicSubnet1ID: !GetAtt
          - VPC
          - Outputs.PublicSubnet1
        PublicSubnet2ID: !GetAtt
          - VPC
          - Outputs.PublicSubnet2
        QSS3BucketRegion: !Ref AWS::Region
        QSS3BucketName: ikasan-bastion
        QSS3KeyPrefix: ikasan-linux-bastion/
#        Currently the bastion host can be accessed from anywhere. This should be restricted.
        RemoteAccessCIDR: 0.0.0.0/0
        VPCID: !GetAtt
          - VPC
          - Outputs.VPC

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        KeyName: eu-west-1
        InstanceType: t2.medium
        ClusterSize: 4
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  EFSINDEX:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/elastic-file-system.yaml
      Parameters:
        FileSystemName: ikasan-index-fs
        VpcId: !GetAtt VPC.Outputs.VPC
        MountTarget1Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
        MountTarget2Subnet: !GetAtt VPC.Outputs.PrivateSubnet2
        OriginSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  EFSCONFIG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/elastic-file-system.yaml
      Parameters:
        FileSystemName: ikasan-config-fs
        VpcId: !GetAtt VPC.Outputs.VPC
        MountTarget1Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
        MountTarget2Subnet: !GetAtt VPC.Outputs.PrivateSubnet2
        OriginSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  EFSDATA:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/elastic-file-system.yaml
      Parameters:
        FileSystemName: ikasan-data-fs
        VpcId: !GetAtt VPC.Outputs.VPC
        MountTarget1Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
        MountTarget2Subnet: !GetAtt VPC.Outputs.PrivateSubnet2
        OriginSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  ConfigService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/config-service/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 2
        Path: /config-server
        FileSystem: !GetAtt EFSCONFIG.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace

  IkasanSolr:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/ikasan-solr/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 1
        Path: /ikasan-solr
        FileSystem: !GetAtt EFSINDEX.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace

#  DashboardH2:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/dashboard-h2/service.yaml
#      Parameters:
#        VPC: !GetAtt VPC.Outputs.VPC
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        Listener: !GetAtt ALB.Outputs.Listener
#        DesiredCount: 1
#        Path: /dashboard-h2
#        FileSystem: !GetAtt EFSDATA.Outputs.FileSystemId
#        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
#        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
#        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
#        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace
#    DependsOn:
#    - ConfigService

  IkasanDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/ikasan-dashboard/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 2
        Path: /ikasan-dashboard
        FileSystem: !GetAtt EFSDATA.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace
    DependsOn:
    - IkasanSolr
#    - DashboardH2
    - ConfigService

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:

  IkasanDashboardUrl:
    Description: Config servcice URL
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, ":8080/"]]
