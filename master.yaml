Description: >

  This template deploys a VPC, with a pair of public and private subnets spread 
  across two Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with 
  ECS hosts distributed across multiple Availability Zones. 

  Finally, it deploys a pair of example ECS services from containers published in 
  Amazon EC2 Container Registry (Amazon ECR).

  Last Modified: 22nd September 2016
  Author: Paul Maddox <pmaddox@amazon.com>

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/linux-bastion.yaml
      Parameters:
        BastionHostName: ikasan-bastion
        BastionBanner: IKASAN AWS STACK
        EnableBanner: true
        EnableTCPForwarding: false
        EnableX11Forwarding: false
        KeyPairName: eu-west-1
        NumBastionHosts: 1
        PublicSubnet1ID: !GetAtt
          - VPC
          - Outputs.PublicSubnet1
        PublicSubnet2ID: !GetAtt
          - VPC
          - Outputs.PublicSubnet2
        QSS3BucketRegion: !Ref AWS::Region
        QSS3BucketName: ikasan-bastion
        QSS3KeyPrefix: ikasan-linux-bastion/
#        Currently the bastion host can be accessed from anywhere. This should be restricted.
        RemoteAccessCIDR: 0.0.0.0/0
        VPCID: !GetAtt
          - VPC
          - Outputs.VPC

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        KeyName: eu-west-1
        InstanceType: t2.medium
        ClusterSize: 4
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  EFSINDEX:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/elastic-file-system.yaml
      Parameters:
        FileSystemName: ikasan-index-fs
        VpcId: !GetAtt VPC.Outputs.VPC
        MountTarget1Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
        MountTarget2Subnet: !GetAtt VPC.Outputs.PrivateSubnet2
        OriginSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  EFSCONFIG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/elastic-file-system.yaml
      Parameters:
        FileSystemName: ikasan-config-fs
        VpcId: !GetAtt VPC.Outputs.VPC
        MountTarget1Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
        MountTarget2Subnet: !GetAtt VPC.Outputs.PrivateSubnet2
        OriginSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  EFSDATA:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/elastic-file-system.yaml
      Parameters:
        FileSystemName: ikasan-data-fs
        VpcId: !GetAtt VPC.Outputs.VPC
        MountTarget1Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
        MountTarget2Subnet: !GetAtt VPC.Outputs.PrivateSubnet2
        OriginSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

#  ProductService:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/product-service/service.yaml
#      Parameters:
#        VPC: !GetAtt VPC.Outputs.VPC
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        DesiredCount: 2
#        Listener: !GetAtt ALB.Outputs.Listener
#        Path: /products

#  H2Service:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/h2/service.yaml
#      Parameters:
#        VPC: !GetAtt VPC.Outputs.VPC
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        Listener: !GetAtt ALB.Outputs.Listener
#        DesiredCount: 1
#        Path: /h2
#        FileSystem: !GetAtt EFS.Outputs.FileSystemId

  ConfigService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/config-service/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 2
        Path: /config-server
        FileSystem: !GetAtt EFSCONFIG.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace

  IkasanSolr:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/ikasan-solr/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 1
        Path: /ikasan-solr
        FileSystem: !GetAtt EFSINDEX.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace

  DashboardH2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/dashboard-h2/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 2
        Path: /dashboard-h2
        FileSystem: !GetAtt EFSDATA.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace
    DependsOn:
    - ConfigService

  IkasanDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/ikasan-dashboard/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        Listener: !GetAtt ALB.Outputs.Listener
        DesiredCount: 2
        Path: /ikasan-dashboard
        FileSystem: !GetAtt EFSDATA.Outputs.FileSystemId
        PrivateSubnetOne: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnetTwo: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        PrivateNamespace: !GetAtt ECS.Outputs.PrivateNamespace
    DependsOn:
    - IkasanSolr
    - DashboardH2

#  WebsiteService:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/services/website-service/service.yaml
#      Parameters:
#        VPC: !GetAtt VPC.Outputs.VPC
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        DesiredCount: 2
#        ProductServiceUrl:
#          !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]
#        Listener: !GetAtt ALB.Outputs.Listener
#        Path: /
#        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://ikasan-ecs-deployment.s3-eu-west-1.amazonaws.com/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:
#  ProductServiceUrl:
#    Description: The URL endpoint for the product service
#    Value: !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]
#
#  WebsiteServiceUrl:
#    Description: The URL endpoint for the website service
#    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]

  ConfigServiceUrl:
    Description: Config servcice URL
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]
